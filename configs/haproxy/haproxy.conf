<source>
  @type udp
  tag haproxy
  port 5140
  bind 127.0.0.1
  <parse>
    @type regexp
    # Matches HAProxy 1.8 rfc5424 HTTP logs, with a catch-all for other log types.
    expression /^\<\d*\>\d{1,2} (?<syslog_time>[^ ]+) (?<syslog_host>[^ ]+) (?<ps>\w+) (?<pid>\d+) ([^ ]+) ((\[(.*)\]|[^ ])) ((?<
client_ip>[\w\.]+):(?<client_port>\d+) \[(?<req_date>.+)\] (?<frontend>[\w\~-]+) (?<backend>[\w-]+)\/(?<backend_server>[^ ]+) (?<
tr_receive_time>[^\/]+)\/(?<tw_queue_time>[^\/]+)\/(?<tc_connect_time>[^\/]+)\/(?<tr_resp_time>[^\/]+)\/(?<ta_active_time>[^\/]+)
 (?<status_code>\d+) (?<bytes_read>\d+) (?<req_cookie>[^ ]+) (?<res_cookie>[^ ]+) (?<term_state>[\w-]+) (?<actconn>\d+)\/(?<fecon
n>\d+)\/(?<beconn>\d+)\/(?<srv_conn>\d+)\/(?<retries>\d+) (?<srv_queue>\d+)\/(?<backend_queue>\d+) \{?(?<req_headers>[^}]*)\}? ?\
{?(?<res_headers>[^}]*)\}? ?"(?<request>[^"]*)"|(?<message>.+))/
    types actconn:integer,backend:string,backend_queue:integer,beconn:integer,backend_server:string,bytes_read:integer,client_ip:
string,client_port:integer,feconn:integer,frontend:string,message:string,pid:integer,ps:string,req_date:string,req_headers:string
,req_cookie:string,request:string,res_headers:string,retries:string,res_cookie:string,srv_conn:integer,srv_queue:integer,status_c
ode:integer,syslog_time:string,term_state:string,tc_connect_time:integer,tr_resp_time:integer,tr_receive_time:integer,ta_active_t
ime:integer,tw_queue_time:integer
  </parse>
</source>

<match haproxy>
  @type rewrite_tag_filter
  <rule>
    key     frontend
    pattern .
    tag haproxy.http
  </rule>
  <rule>
    key     message
    pattern .
    tag haproxy.general
  </rule>
</match>

<match haproxy.**>
  @type influxdb
  dbname fluentd
  flush_interval 1s
  host 192.168.0.97
  port 8086
</match>
 
